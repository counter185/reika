<Application x:Class="ReencGUI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ReencGUI"
             Startup="Application_Startup">
    <Application.Resources>

        <!--Textbox style-->
        <LinearGradientBrush x:Key="TextBox.Static.Background" StartPoint="0.5,0" EndPoint="0.5,1">
            <GradientStop Color="#FF000000" Offset="0"/>
            <GradientStop Color="#FF0A0A1A" Offset="0.95"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FF404040"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="ReencTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{StaticResource TextBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="CaretBrush" Value="{Binding Foreground}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>


        <!--Window style-->
        <Style x:Key="ReencWindowStyle" TargetType="{x:Type Window}">

            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Color="#FF0A0A1A" Offset="0"/>
                        <GradientStop Color="#FF000000" Offset="0.2"/>
                        <!--<GradientStop Color="#FF000A00" Offset="0.5"/>-->
                        <GradientStop Color="#FF000000" Offset="0.8"/>
                        <GradientStop Color="#FF100000" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--Button style-->
        <LinearGradientBrush x:Key="Button.Static.Background" StartPoint="0.5,0" EndPoint="0.5,1">
            <GradientStop Color="#FF000000" Offset="0"/>
            <GradientStop Color="#FF0B0A31" Offset="0.95"/>
            <GradientStop Color="#FF1F6AFF" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF606060"/>
        <LinearGradientBrush x:Key="Button.MouseOver.Background" StartPoint="0.5,0" EndPoint="0.5,1">
            <GradientStop Color="#FF060F37" Offset="0"/>
            <GradientStop Color="#FF1B255A" Offset="0.95"/>
            <GradientStop Color="#FF694BFB" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <LinearGradientBrush x:Key="Button.Pressed.Background" StartPoint="0.5,0" EndPoint="0.5,1">
            <GradientStop Color="#FF031A29" Offset="0"/>
            <GradientStop Color="#FF1B415A" Offset="0.95"/>
            <GradientStop Color="#FF99D2FF" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FF505050"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ReencButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- hwenc progress bars-->
        <LinearGradientBrush x:Key="ProgressBar.NVENC.Progress" StartPoint="0,0.5" EndPoint="1,0.5">
            <GradientStop Color="#FF001701" Offset="0.0"/>
            <GradientStop Color="#FF002101" Offset="0.1"/>
            <GradientStop Color="#FF148A04" Offset="0.5"/>
            <GradientStop Color="#FF93FF97" Offset="0.95"/>
            <GradientStop Color="#FF93FF97" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ProgressBar.NVENC.Border" Color="#FF458E3B"/>

        <LinearGradientBrush x:Key="ProgressBar.AMF.Progress" StartPoint="0,0.5" EndPoint="1,0.5">
            <GradientStop Color="#FF170000" Offset="0.0"/>
            <GradientStop Color="#FF210000" Offset="0.1"/>
            <GradientStop Color="#FF8A0404" Offset="0.5"/>
            <GradientStop Color="#FFFF9393" Offset="0.95"/>
            <GradientStop Color="#FFFF9393" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ProgressBar.AMF.Border" Color="#FF8E3B3B"/>

        <LinearGradientBrush x:Key="ProgressBar.QSV.Progress" StartPoint="0,0.5" EndPoint="1,0.5">
            <GradientStop Color="#FF000A17" Offset="0.0"/>
            <GradientStop Color="#FF000D21" Offset="0.1"/>
            <GradientStop Color="#FF04318A" Offset="0.5"/>
            <GradientStop Color="#FF93BCFF" Offset="0.95"/>
            <GradientStop Color="#FF93C6FF" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ProgressBar.QSV.Border" Color="#FF3B538E"/>

        <LinearGradientBrush x:Key="ProgressBar.CPU.Progress" StartPoint="0,0.5" EndPoint="1,0.5">
            <GradientStop Color="#FF1D1D1D" Offset="0.0"/>
            <GradientStop Color="#FF212121" Offset="0.1"/>
            <GradientStop Color="#FF8A8A8A" Offset="0.5"/>
            <GradientStop Color="#FFCCCCCC" Offset="0.95"/>
            <GradientStop Color="White" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ProgressBar.CPU.Border" Color="White"/>


        <!--Datagrid cell style-->
        <Style x:Key="ReencDgridCellStyle" TargetType="DataGridCell">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#40FFFFFF"/>
            <Setter Property="Margin" Value="5,2"/>
        </Style>
        <Style x:Key="ReencDgridRowStyle" TargetType="{x:Type DataGridRow}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="5"/>
        </Style>

        <!--Progress bar style-->
        <SolidColorBrush x:Key="ProgressBar.Background" Color="Black"/>
        <Style x:Key="ReencProgressBarStyle" TargetType="{x:Type ProgressBar}">
            <Setter Property="Foreground" Value="{StaticResource ProgressBar.NVENC.Progress}"/>
            <Setter Property="Background" Value="{StaticResource ProgressBar.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.NVENC.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid x:Name="TemplateRoot">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Determinate"/>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                                <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                            </PointAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                            <Rectangle x:Name="PART_Track"/>
                            <Grid Margin="1" x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
                                <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}"/>
                                <Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                                    <Rectangle.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsIndeterminate" Value="true">
                                <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="ReencProgressBarStyleNVENC" TargetType="{x:Type ProgressBar}" BasedOn="{StaticResource ReencProgressBarStyle}">
            <Setter Property="Foreground" Value="{StaticResource ProgressBar.NVENC.Progress}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.NVENC.Border}"/>
        </Style>
        <Style x:Key="ReencProgressBarStyleAMF" TargetType="{x:Type ProgressBar}" BasedOn="{StaticResource ReencProgressBarStyle}">
            <Setter Property="Foreground" Value="{StaticResource ProgressBar.AMF.Progress}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.AMF.Border}"/>
        </Style>
        <Style x:Key="ReencProgressBarStyleQSV" TargetType="{x:Type ProgressBar}" BasedOn="{StaticResource ReencProgressBarStyle}">
            <Setter Property="Foreground" Value="{StaticResource ProgressBar.QSV.Progress}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.QSV.Border}"/>
        </Style>
        <Style x:Key="ReencProgressBarStyleCPU" TargetType="{x:Type ProgressBar}" BasedOn="{StaticResource ReencProgressBarStyle}">
            <Setter Property="Foreground" Value="{StaticResource ProgressBar.CPU.Progress}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.CPU.Border}"/>
        </Style>
    </Application.Resources>
</Application>
